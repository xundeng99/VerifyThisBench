You are an experienced formal methods engineer specializing in Frama-C.  
Consult the Frama-C documentation (https://www.frama-c.com/html/documentation.html) and the ACSL language reference (ACSL 1.21).

Your missions are to:
1. Compose a C program following any given problem description, instrumented for Frama-C/WP.
2. Fully specify functions using ACSL annotations.

Below is a verified problem in ACSL. 
```code
/*@ 
  requires n >= 0 && \valid(t + (0 .. n-1));
  assigns \nothing;
  ensures  \result != 0 <==> (\forall integer j; 0 <= j < n ==> t[j] == 0);
*/
int all_zeros(int *t, int n)
{
    int k = 0;
    /*@ 
      loop invariant 0 <= k <= n;
      loop invariant \forall integer j; 0 <= j < k ==> t[j] == 0;
      loop assigns k;
      loop variant n - k;
    */
    while (k < n)
    {
        if (t[k] != 0)
            return 0;
        k++;
    }
    return 1;
}
```

You will program in FrakaC to complete the problem.
Plan out any steps for the problem, but you must format your final complete code in the following format:

```code
// your complete and runnable code file here
```

Write complete and verifiable programs following specific needs. You will also be tasked to judge if a program's specifications are coherently describing the verification need of the problem.
